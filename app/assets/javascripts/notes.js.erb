// execute js for specific page only
NoteModule = function () {
    var thisInstance = this;
    //page_constants
    thisInstance.constants = {
        selectors: {
            note_form_selector: '.js_note_form',
            notes_list_container_selector: '#notes_list_sidebar_container',
            note_sharing_button_selector: '.js_sharing_options_button',
            note_sharing_container_selector: '.js_note_sharing_container',
            note_sharing_delete_selector: '.js_note_sharing_delete',
            note_sharing_list_element_container: '.js_note_sharing_list_element',
            note_sharing_list_element_name: '.js_note_sharing_list_element_name',
            note_shared_list_container: '.js_note_shared_list_container'
        }
    };
    // function to fetch notes list
    function fetch_notes_list($notesListContainer, filter) {// private function
        filter = filter || {};
        $.ajax({
            url: thisInstance.constants.urls.fetch_list_of_notes_url,
            method: 'get',
            data: filter,
            dataType: 'html',
            contentType: 'application/json'
        }).done(function (notesListHtml) {
            $notesListContainer.html(notesListHtml);
            $('#filter_selected').unbind('change').change(function () {
                data = {filter: $(this).val()};
                fetch_notes_list($(thisInstance.constants.selectors.notes_list_container_selector), data);
            });
        });
    }

    // tasks and binding on page intialization
    thisInstance.init = function (page) {
        thisInstance.constants = $.extend(thisInstance.constants, page.constants);
        var selectors = thisInstance.constants.selectors;

        // fetch all notes belonging to user and populate notes list container
        fetch_notes_list($(selectors.notes_list_container_selector));

        var $note_sharing_form = $(selectors.note_form_selector);

        //show and hide note sharing div when note sharing button is clicked
        $note_sharing_form.find(selectors.note_sharing_button_selector).click(function(){
            $note_sharing_form.find(selectors.note_sharing_container_selector).toggleClass('hide');
        });

        //delete note sharing when cross is clicked
        $note_sharing_form.find(selectors.note_sharing_delete_selector).click(function(){
            var $element = $(this).closest(selectors.note_sharing_list_element_container),
                user_full_name = $element.find(selectors.note_sharing_list_element_name).text();
            response = confirm("Are you sure you want to remove " + user_full_name + " from shared list?");
            if(response){
                $.ajax({
                    url: $element.data('delete_url'),
                    method: 'delete',
                    dataType: 'json'
                }).done(function(data){
                    $element.remove();
                    $note_shared_list_container = $note_sharing_form.find(
                            selectors.note_shared_list_container
                    );
                    if($note_shared_list_container.find('li').length === 0){
                        $note_shared_list_container.remove();
                    }
                });
            }
        })
    };
};