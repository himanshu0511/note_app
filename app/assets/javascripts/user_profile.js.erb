// execute js for specific page only
UserProfileModule = function () {
    var thisInstance = this;
    //page_constants
    thisInstance.constants = {
        selectors: {
            notes_list_container_selector: '#notes_list_sidebar_container',
            pagination_links_selector: '.js_pagination a'
        }
    };
    // function to fetch notes list
    function fetch_notes_list($notesListContainer, filter, url) {// private function
        filter = filter || {};
        $.ajax({
            url: url || thisInstance.constants.urls.fetch_list_of_notes_url,
            method: 'get',
            data: filter,
            dataType: 'html',
            contentType: 'application/json'
        }).done(function (notesListHtml) {
            $notesListContainer.html(notesListHtml);

            // bind fetching of filter note list when note filter select field is changed
            $(thisInstance.constants.selectors.note_filter_selector).unbind('change').change(function () {
                var data = {filter: $(this).val()};
                fetch_notes_list($notesListContainer, data);
            });
            // pagination functionality
            $notesListContainer.find(thisInstance.constants.selectors.pagination_links_selector).click(function () {
                var url = $(this).attr('href');
                fetch_notes_list($notesListContainer, {}, url);
                return false;
            });
        });
    }
    // tasks and binding on page intialization
    thisInstance.init = function (page) {
        page = $.extend(true, page || {}, {constants: {selectors: {}, urls: {}}});
        thisInstance.constants = $.extend(true, thisInstance.constants, page.constants);
        var selectors = thisInstance.constants.selectors;

        // fetch all notes belonging to user and populate notes list container
        fetch_notes_list($(selectors.notes_list_container_selector));
    };
};